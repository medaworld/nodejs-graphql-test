{"ast":null,"code":"import _classCallCheck from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/briansuruki/Web/Projects/graphql-test/client/src/pages/Feed/SinglePost/SinglePost.js\";\nimport React, { Component } from 'react';\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SinglePost = /*#__PURE__*/function (_Component) {\n  _inherits(SinglePost, _Component);\n  var _super = _createSuper(SinglePost);\n  function SinglePost() {\n    var _this;\n    _classCallCheck(this, SinglePost);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      title: '',\n      author: '',\n      date: '',\n      image: '',\n      content: ''\n    };\n    return _this;\n  }\n  _createClass(SinglePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      var postId = this.props.match.params.postId;\n      var graphqlQuery = {\n        query: \"\\n      {\\n        post(id: \\\"\".concat(postId, \"\\\" ) {\\n          title\\n          content\\n          imageUrl\\n          creator {\\n            name\\n          }\\n          createdAt\\n        }\\n      }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch status');\n        }\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          title: resData.post.title,\n          author: resData.post.creator.name,\n          image: 'http://localhost:8080/' + resData.post.imageUrl,\n          date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.post.content\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"single-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Created by \", this.state.author, \" on \", this.state.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-post__image\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            contain: true,\n            imageUrl: this.state.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return SinglePost;\n}(Component);\nexport default SinglePost;","map":{"version":3,"names":["React","Component","Image","SinglePost","state","title","author","date","image","content","postId","props","match","params","graphqlQuery","query","fetch","method","headers","Authorization","token","body","JSON","stringify","then","res","json","status","Error","resData","setState","post","creator","name","imageUrl","Date","createdAt","toLocaleDateString","catch","err","console","log"],"sources":["/Users/briansuruki/Web/Projects/graphql-test/client/src/pages/Feed/SinglePost/SinglePost.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Image from '../../../components/Image/Image';\nimport './SinglePost.css';\n\nclass SinglePost extends Component {\n  state = {\n    title: '',\n    author: '',\n    date: '',\n    image: '',\n    content: '',\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    const graphqlQuery = {\n      query: `\n      {\n        post(id: \"${postId}\" ) {\n          title\n          content\n          imageUrl\n          creator {\n            name\n          }\n          createdAt\n        }\n      }\n      `,\n    };\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch status');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState({\n          title: resData.post.title,\n          author: resData.post.creator.name,\n          image: 'http://localhost:8080/' + resData.post.imageUrl,\n          date: new Date(resData.post.createdAt).toLocaleDateString('en-US'),\n          content: resData.post.content,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,OAAOC,KAAK,MAAM,iCAAiC;AACnD,OAAO,kBAAkB;AAAC;AAAA,IAEpBC,UAAU;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MACdC,KAAK,GAAG;MACNC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAED,6BAAoB;MAAA;MAClB,IAAMC,MAAM,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACH,MAAM;MAC7C,IAAMI,YAAY,GAAG;QACnBC,KAAK,0CAESL,MAAM;MAWtB,CAAC;MACDM,KAAK,CAAC,+BAA+B,EAAE;QACrCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,aAAa,EAAE,SAAS,GAAG,IAAI,CAACR,KAAK,CAACS,KAAK;UAC3C,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;MACnC,CAAC,CAAC,CACCU,IAAI,CAAC,UAACC,GAAG,EAAK;QACb,OAAOA,GAAG,CAACC,IAAI,EAAE;QACjB,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;UACtB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QACA,OAAOH,GAAG,CAACC,IAAI,EAAE;MACnB,CAAC,CAAC,CACDF,IAAI,CAAC,UAACK,OAAO,EAAK;QACjB,MAAI,CAACC,QAAQ,CAAC;UACZzB,KAAK,EAAEwB,OAAO,CAACE,IAAI,CAAC1B,KAAK;UACzBC,MAAM,EAAEuB,OAAO,CAACE,IAAI,CAACC,OAAO,CAACC,IAAI;UACjCzB,KAAK,EAAE,wBAAwB,GAAGqB,OAAO,CAACE,IAAI,CAACG,QAAQ;UACvD3B,IAAI,EAAE,IAAI4B,IAAI,CAACN,OAAO,CAACE,IAAI,CAACK,SAAS,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;UAClE5B,OAAO,EAAEoB,OAAO,CAACE,IAAI,CAACtB;QACxB,CAAC,CAAC;MACJ,CAAC,CAAC,CACD6B,KAAK,CAAC,UAACC,GAAG,EAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EAAC;IAAA;IAAA,OAED,kBAAS;MACP,oBACE;QAAS,SAAS,EAAC,aAAa;QAAA,wBAC9B;UAAA,UAAK,IAAI,CAACnC,KAAK,CAACC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAC3B;UAAA,0BACc,IAAI,CAACD,KAAK,CAACE,MAAM,UAAM,IAAI,CAACF,KAAK,CAACG,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAC/C,eACL;UAAK,SAAS,EAAC,oBAAoB;UAAA,uBACjC,QAAC,KAAK;YAAC,OAAO;YAAC,QAAQ,EAAE,IAAI,CAACH,KAAK,CAACI;UAAM;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACzC,eACN;UAAA,UAAI,IAAI,CAACJ,KAAK,CAACK;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACnB;IAEd;EAAC;EAAA;AAAA,EApEsBR,SAAS;AAuElC,eAAeE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}