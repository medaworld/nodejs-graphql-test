{"ast":null,"code":"import _toConsumableArray from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/briansuruki/Web/Projects/graphql-test/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/briansuruki/Web/Projects/graphql-test/client/src/pages/Feed/Feed.js\";\nimport React, { Component, Fragment } from 'react';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n  var _super = _createSuper(Feed);\n  function Feed() {\n    var _this;\n    _classCallCheck(this, Feed);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n      var page = _this.state.postPage;\n      if (direction === 'next') {\n        page++;\n        _this.setState({\n          postPage: page\n        });\n      }\n      if (direction === 'previous') {\n        page--;\n        _this.setState({\n          postPage: page\n        });\n      }\n      var graphqlQuery = {\n        query: \"\\n        {\\n          posts(page: \".concat(page, \") {\\n            posts {\\n              _id\\n              title\\n              content\\n              creator {\\n                name\\n              }\\n              createdAt\\n            }\\n            totalPosts\\n          }\\n        }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors) {\n          throw new Error('Fetching posts failed!');\n        }\n        _this.setState({\n          posts: resData.data.posts.posts.map(function (post) {\n            return _objectSpread(_objectSpread({}, post), {}, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n    };\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      fetch('http://localhost:8080/auth/status', {\n        method: 'PATCH',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: _this.state.status\n        })\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      });\n      var formData = new FormData();\n      formData.append('image', postData.image);\n      if (_this.state.editPost) {\n        formData.append('oldPath', _this.state.editPost.imagePath);\n      }\n      fetch('http://localhost:8080/post-image', {\n        method: 'PUT',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        },\n        body: formData\n      }).then(function (res) {\n        return res.json();\n      }).then(function (fileResData) {\n        var imageUrl = fileResData.filePath;\n        var graphqlQuery = {\n          query: \"\\n          mutation {\\n            createPost(postInput: {title: \\\"\".concat(postData.title, \"\\\", content: \\\"\").concat(postData.content, \"\\\", imageUrl: \\\"\").concat(imageUrl, \"\\\"}) {\\n              _id\\n              title\\n              content\\n              imageUrl\\n              creator {\\n                name\\n              }\\n              createdAt\\n            }\\n          }\\n        \")\n        };\n        if (_this.state.editPost) {\n          graphqlQuery = {\n            query: \"\\n              mutation {\\n                updatePost(id: \\\"\".concat(_this.state.editPost._id, \"\\\", postInput: {title: \\\"\").concat(postData.title, \"\\\", content: \\\"\").concat(postData.content, \"\\\", imageUrl: \\\"\").concat(imageUrl, \"\\\"}) {\\n                  _id\\n                  title\\n                  content\\n                  imageUrl\\n                  creator {\\n                    name\\n                  }\\n                  createdAt\\n                }\\n              }\\n            \")\n          };\n        }\n        return fetch('http://localhost:8080/graphql', {\n          method: 'POST',\n          body: JSON.stringify(graphqlQuery),\n          headers: {\n            Authorization: 'Bearer ' + _this.props.token,\n            'Content-Type': 'application/json'\n          }\n        });\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\"Validation failed. Make sure the email address isn't used yet!\");\n        }\n        if (resData.errors) {\n          console.log(resData);\n          throw new Error('User login failed');\n        }\n        var resDataField = 'createPost';\n        if (_this.state.editPost) {\n          resDataField = 'updatePost';\n        }\n        var post = {\n          _id: resData.data[resDataField]._id,\n          title: resData.data[resDataField].title,\n          content: resData.data[resDataField].content,\n          creator: resData.data[resDataField].creator,\n          createdAt: resData.data[resDataField].createdAt,\n          imagePath: resData.data[resDataField].imageUrl\n        };\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedPosts.pop();\n            updatedPosts.unshift(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n      var graphqlQuery = {\n        query: \"\\n        mutation {\\n          deletePost(id: \\\"\".concat(postId, \"\\\")\\n        }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors) {\n          throw new Error('Deleting the post failed!');\n        }\n        console.log(resData);\n        _this.loadPosts();\n        // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      }).catch(function (err) {\n        console.log(err);\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n    return _this;\n  }\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      fetch('http://localhost:8080/auth/status', {\n        headers: {\n          Authorization: 'Bearer ' + this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          status: resData.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ErrorHandler, {\n          error: this.state.error,\n          onHandle: this.errorHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FeedEdit, {\n          editing: this.state.isEditing,\n          selectedPost: this.state.editPost,\n          loading: this.state.editLoading,\n          onCancelEdit: this.cancelEditHandler,\n          onFinishEdit: this.finishEditHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"feed__status\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.statusUpdateHandler,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              placeholder: \"Your status\",\n              control: \"input\",\n              onChange: this.statusInputChangeHandler,\n              value: this.state.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              mode: \"flat\",\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"feed__control\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            mode: \"raised\",\n            design: \"accent\",\n            onClick: this.newPostHandler,\n            children: \"New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"feed\",\n          children: [this.state.postsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              marginTop: '2rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: \"No posts found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this) : null, !this.state.postsLoading && /*#__PURE__*/_jsxDEV(Paginator, {\n            onPrevious: this.loadPosts.bind(this, 'previous'),\n            onNext: this.loadPosts.bind(this, 'next'),\n            lastPage: Math.ceil(this.state.totalPosts / 2),\n            currentPage: this.state.postPage,\n            children: this.state.posts.map(function (post) {\n              return /*#__PURE__*/_jsxDEV(Post, {\n                id: post._id,\n                author: post.creator.name,\n                date: new Date(post.createdAt).toLocaleDateString('en-US'),\n                title: post.title,\n                image: post.imageUrl,\n                content: post.content,\n                onStartEdit: _this3.startEditPostHandler.bind(_this3, post._id),\n                onDelete: _this3.deletePostHandler.bind(_this3, post._id)\n              }, post._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, _this3);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n  return Feed;\n}(Component);\nexport default Feed;","map":{"version":3,"names":["React","Component","Fragment","Post","Button","FeedEdit","Input","Paginator","Loader","ErrorHandler","Feed","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","setState","page","graphqlQuery","query","fetch","method","headers","Authorization","props","token","body","JSON","stringify","then","res","json","resData","errors","Error","data","map","post","imagePath","imageUrl","catch","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","startEditPostHandler","postId","prevState","loadedPost","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","image","fileResData","filePath","title","content","resDataField","creator","createdAt","updatedPosts","postIndex","findIndex","pop","unshift","err","error","statusInputChangeHandler","input","value","deletePostHandler","errorHandler","textAlign","marginTop","length","bind","Math","ceil","name","Date","toLocaleDateString"],"sources":["/Users/briansuruki/Web/Projects/graphql-test/client/src/pages/Feed/Feed.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false,\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:8080/auth/status', {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = (direction) => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphqlQuery = {\n      query: `\n        {\n          posts(page: ${page}) {\n            posts {\n              _id\n              title\n              content\n              creator {\n                name\n              }\n              createdAt\n            }\n            totalPosts\n          }\n        }\n      `,\n    };\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error('Fetching posts failed!');\n        }\n        this.setState({\n          posts: resData.data.posts.posts.map((post) => {\n            return {\n              ...post,\n              imagePath: post.imageUrl,\n            };\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false,\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = (event) => {\n    event.preventDefault();\n    fetch('http://localhost:8080/auth/status', {\n      method: 'PATCH',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        status: this.state.status,\n      }),\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = (postId) => {\n    this.setState((prevState) => {\n      const loadedPost = { ...prevState.posts.find((p) => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost,\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = (postData) => {\n    this.setState({\n      editLoading: true,\n    });\n    const formData = new FormData();\n    formData.append('image', postData.image);\n    if (this.state.editPost) {\n      formData.append('oldPath', this.state.editPost.imagePath);\n    }\n    fetch('http://localhost:8080/post-image', {\n      method: 'PUT',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n      },\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((fileResData) => {\n        const imageUrl = fileResData.filePath;\n        let graphqlQuery = {\n          query: `\n          mutation {\n            createPost(postInput: {title: \"${postData.title}\", content: \"${postData.content}\", imageUrl: \"${imageUrl}\"}) {\n              _id\n              title\n              content\n              imageUrl\n              creator {\n                name\n              }\n              createdAt\n            }\n          }\n        `,\n        };\n\n        if (this.state.editPost) {\n          graphqlQuery = {\n            query: `\n              mutation {\n                updatePost(id: \"${this.state.editPost._id}\", postInput: {title: \"${postData.title}\", content: \"${postData.content}\", imageUrl: \"${imageUrl}\"}) {\n                  _id\n                  title\n                  content\n                  imageUrl\n                  creator {\n                    name\n                  }\n                  createdAt\n                }\n              }\n            `,\n          };\n        }\n        return fetch('http://localhost:8080/graphql', {\n          method: 'POST',\n          body: JSON.stringify(graphqlQuery),\n          headers: {\n            Authorization: 'Bearer ' + this.props.token,\n            'Content-Type': 'application/json',\n          },\n        });\n      })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          console.log(resData);\n          throw new Error('User login failed');\n        }\n        let resDataField = 'createPost';\n        if (this.state.editPost) {\n          resDataField = 'updatePost';\n        }\n        const post = {\n          _id: resData.data[resDataField]._id,\n          title: resData.data[resDataField].title,\n          content: resData.data[resDataField].content,\n          creator: resData.data[resDataField].creator,\n          createdAt: resData.data[resDataField].createdAt,\n          imagePath: resData.data[resDataField].imageUrl,\n        };\n        this.setState((prevState) => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              (p) => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedPosts.pop();\n            updatedPosts.unshift(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n          };\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = (postId) => {\n    this.setState({ postsLoading: true });\n    const graphqlQuery = {\n      query: `\n        mutation {\n          deletePost(id: \"${postId}\")\n        }\n      `,\n    };\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error('Deleting the post failed!');\n        }\n        console.log(resData);\n        this.loadPosts();\n        // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = (error) => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map((post) => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}